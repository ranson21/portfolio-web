steps:
  # Get latest version
  - name: 'us-central1-docker.pkg.dev/abby-ranson/docker/github-ops-builder'
    args: ['get-version', '${_REPO_OWNER}', '${_REPO}']
    secretEnv: ['GITHUB_TOKEN']
    id: 'get-version'

  # Process PR info and bump version
  - name: 'us-central1-docker.pkg.dev/${PROJECT_ID}/docker/github-ops-builder'
    args:
      - 'bump-version'
      - '${_REPO_OWNER}'
      - '${_REPO}'
      - '--current-version'
      - '$$(cat current_version.txt)'
      - '--version-type'
      - '${_PR_TYPE}'
      - '--is-merge'
      - '${_IS_MERGE}'
      - '--pr-number'
      - '${_PR_NUMBER}'
    secretEnv: ['GITHUB_TOKEN']
    id: 'bump-version'
    waitFor: ['get-version']

  # Export version to environment
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "export const APP_VERSION = '$(cat new_version.txt)'" > src/version.js
    id: 'export-version'
    waitFor: ['bump-version']

  # Install dependencies
  - name: 'node:18'
    entrypoint: npm
    args: ['install']
    id: 'install'
    waitFor: ['bump-version']

  # Build the Vite app
  - name: 'node:18'
    entrypoint: npm
    args: ['run', 'build']
    env: ['VITE_APP_API=https://us-central1-abby-ranson.cloudfunctions.net/contact-me']
    id: 'build'
    waitFor: ['install']

  # Create tar archive of dist directory
  - name: 'ubuntu'
    args: ['tar', '-czf', 'release.tar.gz', '-C', 'dist', '.']
    id: 'create-tar'
    waitFor: ['build']

  # Create GitHub release
  - name: 'us-central1-docker.pkg.dev/${PROJECT_ID}/docker/github-ops-builder'
    args:
      - 'create-release'
      - '${_REPO_OWNER}'
      - '${_REPO}'
      - '--current-version'
      - '$$(cat new_version.txt)'
      - '--is-prod'
      - '${_IS_MERGE}'
    secretEnv: ['GITHUB_TOKEN']
    id: 'create-release'
    waitFor: ['create-tar']

  # Update parent repo submodule
  - name: 'us-central1-docker.pkg.dev/${PROJECT_ID}/docker/github-ops-builder'
    args:
      - 'update-submodule'
      - '${_REPO_OWNER}'
      - '${_REPO}'
      - '--parent-repo'
      - '${_PARENT_REPO}'
      - '--submodule-path'
      - '${_SUBMODULE_PATH}'
      - '--current-version'
      - '$$(cat new_version.txt)'
      - '--is-merge'
      - '${_IS_MERGE}'
    secretEnv: ['GITHUB_TOKEN']
    id: 'update-submodule'
    waitFor: ['create-release']

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/github_token/versions/latest
      env: 'GITHUB_TOKEN'

substitutions:
  _PR_TYPE: 'timestamp' # Populated by the PR label if it exists
  _REPO_OWNER: ''
  _REPO: 'portfolio-web'
  _IS_MERGE: 'false'
  _PR_NUMBER: '' # Add this line to your substitutions
  _PARENT_REPO: 'portfolio' # Parent repository name
  _SUBMODULE_PATH: 'apps/web/portfolio-web' # Path to submodule in parent repo

