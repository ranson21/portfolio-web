steps:
  # Get latest version
  - name: 'us-central1-docker.pkg.dev/abby-ranson/docker/github-ops-builder'
    args: ['--action', 'get-version', '--repo-owner', '${_REPO_OWNER}', '--repo-name', 'portfolio-web']
    secretEnv: ['GITHUB_TOKEN']
    id: 'get-version'

  # Process PR info and bump version
  - name: 'us-central1-docker.pkg.dev/abby-ranson/docker/github-ops-builder'
    args:
      [
        '--action',
        'bump-version',
        '--repo-owner',
        '${_REPO_OWNER}',
        '--repo-name',
        'portfolio-web',
        '--current-version',
        '$$(cat current_version.txt)',
        '--version-type',
        '$${_PR_TYPE:-timestamp}',
      ]
    secretEnv: ['GITHUB_TOKEN']
    id: 'bump-version'
    waitFor: ['get-version']

  # Add this to see what files are created
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Files after bump-version:"
        ls -la
        echo "Content of new_version.txt (if exists):"
        find / -name new_version.txt 2>/dev/null || echo "File not found"
    waitFor: ['bump-version']

  # Install dependencies
  - name: 'node:18'
    entrypoint: npm
    args: ['install']

  # Build the Vite app
  - name: 'node:18'
    entrypoint: npm
    args: ['run', 'build']

  # Create tar archive of dist directory
  - name: 'ubuntu'
    args: ['tar', '-czf', 'release.tar.gz', '-C', 'dist', '.']

  # Create GitHub release
  - name: 'us-central1-docker.pkg.dev/abby-ranson/docker/github-ops-builder'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Current directory: $(pwd)"
        echo "Files in directory:"
        ls -la
        echo "Content of new_version.txt:"
        cat new_version.txt
        VERSION=$(cat new_version.txt)
        if [[ "${_IS_MERGE}" != "true" ]]; then
          python /usr/local/bin/cli.py \
            --action create-release \
            --repo-owner ${_REPO_OWNER} \
            --repo-name portfolio-web \
            --current-version "$${VERSION}" \
            --is-draft
        else
          python /usr/local/bin/cli.py \
            --action create-release \
            --repo-owner ${_REPO_OWNER} \
            --repo-name portfolio-web \
            --current-version "$${VERSION}"
        fi
    secretEnv: ['GITHUB_TOKEN']
    id: 'create-release'
    waitFor: ['bump-version']

  # Update parent repo submodule
  - name: 'us-central1-docker.pkg.dev/abby-ranson/docker/github-ops-builder'
    args:
      [
        '--action',
        'update-submodule',
        '--repo-owner',
        '${_REPO_OWNER}',
        '--repo-name',
        'portfolio-web',
        '--parent-repo',
        'portfolio',
        '--submodule-path',
        'apps/web/portfolio',
        '--current-version',
        '$$(cat new_version.txt)',
        '--is-merge',
        '$${_IS_MERGE}',
      ]
    secretEnv: ['GITHUB_TOKEN']
    id: 'update-submodule'
    waitFor: ['create-release']

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/github_token/versions/latest
      env: 'GITHUB_TOKEN'

substitutions:
  _PR_TYPE: '' # Populated by the PR label if it exists
  _REPO_OWNER: ''
  _IS_MERGE: 'false'
